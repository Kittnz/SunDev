{% extends "layout.html.twig" %}
    {% block title %}SunDungeon - {{ parent() }}{% endblock %}
    {% block head %}
        <script src="{{ app.request.basepath }}/js/jquery.dataTables.min.js"></script>
        <style type="text/css">
            #header-fixed {
                position: fixed;
                top: 0; display:none;
                background-color:white;
                border-bottom: 1px solid #dbdbdb;
            }
            .table {
                margin-bottom: 0;
            }
            .table > tbody > tr > td {
                vertical-align: middle!important;
            }
            .dataTables_info {
                position: absolute;
                top: 55px;
            }
            #table_filter {
                text-align: right;
            }
            .dataTables_scrollBody tr.top td {
                padding: 0!important;
            }

            td.testing {
                padding: 0!important;
                vertical-align: top!important;
                height: 68px;
            }

            td.testing div {
                height: 50%;
                width: 50%;
                float: left;
                line-height: 2.4;
            }

            td {
                text-align: center;
                padding: 8px 0!important;
            }

            td span {
                display: none;
            }

            td.big {
                width: 25%;
            }

            td.med {
                width: 10%;
            }

            td.small {
                width: 5%;
                font-size: 100%!important;
            }

            td.part {
                width: 3.33%;
            }

            td textarea {
                width: 95%;
            }

            .border {
                border-right: 1px solid #fff;
            }

            .border2 {
                border-right: 1px solid #dbdbdb;
            }

            .ok {
                background: #5cb85c;
                color: #fff;
            }

            .mid {
                background: #f0ad4e;
                color: #fff;
            }

            .ko {
                background: #F95C4B;
                color: #fff;
            }

            .no {
                background: #777;
                color: #fff;
            }

            .name {
                background: #5bc0de;
                color: #fff;
            }
        </style>
    {% endblock %}
    {% block content %}
        <div class="fluid-container">
            <table id="table" class="table table-hover">
                <thead>
                    <tr class="top">
                        <td width="15%">Entry</td>
                        <td width="5%"></td>
                        <td>Statistics</td>
                        <td>Resistances</td>
                        <td>Immunities</td>
                        <td>Respawn</td>
                        <td>Equipment</td>
                        <td>Gossip</td>
                        <td>Emote</td>
                        <td>SmartAI</td>
                        <td>Comment</td>
                    </tr>
                </thead>
                <tbody>
                {% for creature in creatures %}
                    <tr>
                        <td rowspan="2"><a href="http://wowhead.com/npc={{ creature.entry }}">{{ creature.name }}</a></td>
                        <td rowspan="2" class="border testing">
                            <div class="testeur" id="{{ creature.entry }}_test1" status="{% if creature.tester == 1 %}1{% else %}0{% endif %}" onclick='setTester({{ creature.entry }}, 1)' title="Leekie">L</div>
                            <div class="testeur" id="{{ creature.entry }}_test2" status="{% if creature.tester == 2 %}1{% else %}0{% endif %}" onclick='setTester({{ creature.entry }}, 2)' title="Mikelus">M</div>
                        </td>
                        <td {% if creature.heroic == 0 %}rowspan="2"{% endif %} status="{% if creature.nstats != null %}{{ creature.nstats }}{% else %}0{% endif %}" id="{{ creature.entry }}_1" onclick='testCreature({{ creature.entry }}, "normal", 1)' oncontextmenu="getService({{ creature.entry }}, 1)" class="test"></td>
                        <td {% if creature.heroic == 0 %}rowspan="2"{% endif %} status="{% if creature.nresistances != null %}{{ creature.nresistances }}{% else %}0{% endif %}" id="{{ creature.entry }}_2" onclick='testCreature({{ creature.entry }}, "normal", 2)' oncontextmenu="getService({{ creature.entry }}, 2)" class="test"></td>
                        <td {% if creature.heroic == 0 %}rowspan="2"{% endif %} status="{% if creature.nimmunities != null %}{{ creature.nimmunities }}{% else %}0{% endif %}" id="{{ creature.entry }}_3" onclick='testCreature({{ creature.entry }}, "normal", 3)' oncontextmenu="getService({{ creature.entry }}, 3)" class="test"></td>
                        <td {% if creature.heroic == 0 %}rowspan="2"{% endif %} status="{% if creature.nrespawn != null %}{{ creature.nrespawn }}{% else %}0{% endif %}" id="{{ creature.entry }}_4" onclick='testCreature({{ creature.entry }}, "normal", 4)' oncontextmenu="getService({{ creature.entry }}, 4)" class="test"></td>
                        <td rowspan="2" status="{% if creature.equipment != null %}{{ creature.equipment }}{% else %}0{% endif %}" id="{{ creature.entry }}_5" onclick='testCreature({{ creature.entry }}, "all", 5)' oncontextmenu="getService({{ creature.entry }}, 5)" class="test"></td>
                        <td rowspan="2" status="{% if creature.gossip != null %}{{ creature.gossip }}{% else %}0{% endif %}" id="{{ creature.entry }}_6" onclick='testCreature({{ creature.entry }}, "all", 6)' oncontextmenu="getService({{ creature.entry }}, 6)" class="test"></td>
                        <td rowspan="2" status="{% if creature.emote != null %}{{ creature.emote }}{% else %}0{% endif %}" id="{{ creature.entry }}_7" onclick='testCreature({{ creature.entry }}, "all", 7)' oncontextmenu="getService({{ creature.entry }}, 7)" class="test"></td>
                        <td rowspan="2" status="{% if creature.smartai != null %}{{ creature.smartai }}{% else %}0{% endif %}" id="{{ creature.entry }}_8" onclick='testCreature({{ creature.entry }}, "all", 8)' oncontextmenu="getService({{ creature.entry }}, 8)" class="test"></td>
                        <td rowspan="2" width="20%" id="{{ creature.entry }}_9" >{% if is_granted('ROLE_DUNGEONS_WRITE') %}<textarea id="{{ creature.entry }}">{{ creature.comment }}</textarea>{% endif %}</td>
                    </tr>
                    <tr>
                        <td status="{% if creature.hstats != null %}{{ creature.hstats }}{% else %}0{% endif %}" id="{{ creature.heroic }}_1" onclick='testCreature({{ creature.heroic }}, "heroic", 1)' oncontextmenu="getService({{ creature.heroic }}, 1)" class="test"></td>
                        <td status="{% if creature.hresistances != null %}{{ creature.hresistances }}{% else %}0{% endif %}" id="{{ creature.heroic }}_2" onclick='testCreature({{ creature.heroic }}, "heroic", 2)' oncontextmenu="getService({{ creature.heroic }}, 2)" class="test"></td>
                        <td status="{% if creature.himmunities != null %}{{ creature.himmunities }}{% else %}0{% endif %}" id="{{ creature.heroic }}_3" onclick='testCreature({{ creature.heroic }}, "heroic", 3)' oncontextmenu="getService({{ creature.heroic }}, 3)" class="test"></td>
                        <td status="{% if creature.hrespawn != null %}{{ creature.hrespawn }}{% else %}0{% endif %}" id="{{ creature.heroic }}_4" onclick='testCreature({{ creature.heroic }}, "heroic", 4)' oncontextmenu="getService({{ creature.heroic }}, 4)" class="test"></td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    {% endblock %}
    {% block script %}
        <script type="text/javascript">
            $(document).ready(function() {
                $('#table').dataTable( {
                    "scrollY":        "calc(100vh - 119px)",
                    "scrollCollapse": false,
                    "paging":         false,
                    "order": [[ 2, "asc" ]]
                } );

                //set the cells visuals based on their status
                $('tbody td').each(function(lol, element) {
                    var status = $(element).attr("status");
                    if(status !== undefined) { //jQuery attr() returns undefined on no result
                        setElementColorByStatus(element, status);
                    }
                });

                $('.testeur').each(function(lol, element) {
                    var status = $(element).attr("status");
                    if(status !== undefined) { //jQuery attr() returns undefined on no result
                        setTesterColor(element, status);
                    }
                });
            } );

            function setElementColorByStatus(element, status) {
                $(element).toggleClass('ok', false);
                $(element).toggleClass('mid', false);
                $(element).toggleClass('ko', false);
                $(element).toggleClass('no', false);

                switch(parseInt(status))
                {
                    case 0:	break;
                    case 1:	$(element).toggleClass('ok',true);	break;
                    case 2:	$(element).toggleClass('mid',true); break;
                    case 3:	$(element).toggleClass('ko',true);	break;
                    case 4:	$(element).toggleClass('no',true);	break;
                }
            }

            function setTesterColor(element, status) {
                $(element).toggleClass('name', false);

                switch(parseInt(status))
                {
                    case 0:	break;
                    case 1:	$(element).toggleClass('name',true);	break;
                }
            }

            function getService(entry, column) {
                switch(column) {
                    case 1:
                        window.open('{{ app.request.basepath }}/creature/entry/' + entry + '/stats', '_blank');
                        break;
                    case 2:
                        window.open('{{ app.request.basepath }}/creature/entry/' + entry + '/stats', '_blank');
                        break;
                    case 3:
                        window.open('{{ app.request.basepath }}/creature/entry/' + entry + '/immune', '_blank');
                        break;
                    case 4:
                        window.open('{{ app.request.basepath }}/creature/entry/' + entry + '/respawn', '_blank');
                        break;
                    case 5:
                        window.open('{{ app.request.basepath }}/creature/entry/' + entry + '/equip', '_blank');
                        break;
                    case 6:
                        window.open('{{ app.request.basepath }}/creature/entry/' + entry + '/gossip', '_blank');
                        break;
                    case 7:
                       window.open('{{ app.request.basepath }}/creature/entry/' + entry + '/emote', '_blank');
                       break;
                    case 8:
                        window.open('{{ app.request.basepath }}/creature/entry/' + entry + '/smartai', '_blank');
                        break;
                    default: return;
                }

            }
            {% if is_granted('ROLE_DUNGEONS_WRITE') %}
            //set the cells visuals based on their status
            $('.testeur').click(function() {
                $(this).toggleClass('name').siblings().removeClass('name');
            });

            function testCreature(creature, type, column) {
                var element = $('#'+creature+"_"+column);

                var status = element.attr('status');
                status = (parseInt(status) + 1)%5;
                element.attr('status',status);

                setElementColorByStatus(element, status);

                var info = { "entry": creature.toString(), type: type.toString(), "column": column.toString(), "status": status.toString(), "map": "{{ map }}" };
                $.ajax({
                    type: "POST",
                    url: '/dungeon/apply/status',
                    data: 'info=' + JSON.stringify(info),
                    success: function(data) {
                        console.log(data);
                    },
                    error: function (xhr, err) {
                        console.log("readyState: " + xhr.readyState + "\nstatus: " + xhr.status);
                        console.log(xhr.responseText);
                    }
                });
            }

            // Tester
            function setTester(creature, tester) {
                var element = $('#'+creature+"_test"+tester);

                if (element.hasClass('name')) {
                    var tester = 0;
                }
                var info = { "entry": creature, "tester": tester, "map": "{{ map }}" };
                $.ajax({
                    type: "POST",
                    url: '/dungeon/apply/tester',
                    data: 'info=' + JSON.stringify(info),
                    success: function(data) {
                        console.log(data);
                    },
                    error: function (xhr, err) {
                        console.log("readyState: " + xhr.readyState + "\nstatus: " + xhr.status);
                        console.log(xhr.responseText);
                    }
                });
            }

            $('textarea').change(function(){
                var creature = $(this).attr('id');
                var Comment = $(this).val();
                var info = { "entry": creature, "comment": Comment };
                Comment = Comment.replace(/\r?\n/g, '%0D%0A');
                $.ajax({
                    type: "POST",
                    url: '/dungeon/apply/comment',
                    data: 'info=' + JSON.stringify(info),
                    success: function(data) {
                        console.log(data);
                    },
                    error: function (xhr, err) {
                        console.log("readyState: " + xhr.readyState + "\nstatus: " + xhr.status);
                        console.log(xhr.responseText);
                    }
                });
            });
            {% endif %}
        </script>
    {% endblock %}